'use strict';

exports.__esModule = true;
exports['default'] = promiseMiddleware;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _isPromise = require('./isPromise');

var _isPromise2 = _interopRequireDefault(_isPromise);

function promiseMiddleware(next) {
  return function (action) {
    if (!_isPromise2['default'](action.payload)) {
      return next(action);
    }

    var types = action.types;

    var promise = action.payload;
    var PENDING = types[0];
    var FULFILLED = types[1];
    var REJECTED = types[2];

    /**
     * Dispatch the first async handler. This tells the
     * reducer that an async action has been dispatched.
     */
    next({
      type: PENDING
    });

    /**
     * Return either the fulfilled action object or the rejected
     * action object.
     */
    return promise.then(function (payload) {
      return next({
        payload: payload,
        type: FULFILLED
      });
    }, function (error) {
      return next({
        payload: error,
        type: REJECTED
      });
    });
  };
}

module.exports = exports['default'];
